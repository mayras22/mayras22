name: Update Languages
on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Friday
  workflow_dispatch: # Allows manual triggering

jobs:
  update-languages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch and Generate Language Data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python - <<EOF
          import requests
          import os

          def get_languages(token):
              url = "https://api.github.com/user/repos"
              headers = {"Authorization": f"token {token}"}
              languages = {}

              page = 1
              while True:
                  response = requests.get(url, headers=headers, params={"per_page": 100, "page": page})
                  if response.status_code != 200:
                      print(f"Error: {response.status_code}, {response.text}")
                      return

                  repos = response.json()
                  if not repos:
                      break

                  for repo in repos:
                      lang_url = repo["languages_url"]
                      lang_response = requests.get(lang_url, headers=headers)
                      if lang_response.status_code != 200:
                          print(f"Error retrieving languages for {repo['name']}")
                          continue

                      repo_languages = lang_response.json()
                      for lang, count in repo_languages.items():
                          languages[lang] = languages.get(lang, 0) + count

                  page += 1

              sorted_languages = dict(sorted(languages.items(), key=lambda item: item[1], reverse=True))
              return sorted_languages

          token = os.getenv("LANGUAGES_USED")
          languages = get_languages(token)

          with open("languages.md", "w") as f:
              if languages:
                  f.write("# Languages Used in Repositories\n\n")
                  for lang, count in languages.items():
                      f.write(f"- {lang}: {count} bytes\n")
          EOF

      - name: Update README
        run: cp languages.md README.md && git add README.md && git commit -m "Update languages" && git push
